function get_params() {	// ----------------------------------------------------------------	//	Die Dialogkomponenten selbst	// ----------------------------------------------------------------	var std_w = 200, std_h = 100;	var sld_lbl_w = 100;	var w = new Window("dialog");	w.orientation = "column";	w.alignChildren = ["fill", "fill" ];	// ----------------------------------------------------------------	// Um Eingaben rückgängig machen zu können, müssen wir uns alle Werte merken	// Macht das Auswerten auch leichter ;)	// ----------------------------------------------------------------	w.state = {}	// ----------------- group: main	w.main = w.add("group", undefined , "")	w.main.orientation = "column"	w.main.alignChildren = ["fill", "fill"]	// ----------------- edittext: last_page	w.main.add("statictext", undefined, "Letzte Seite")	w.last_page = w.main.add("edittext", [ undefined, undefined, std_w, 20], "")	w.last_page.text = "64"	w.state.last_page = "64"	w.last_page.onChange = function() {		if ( ! isNaN( Number( this.text ) ) ) {			w.state.last_page = Number( this.text)		} else {			this.text = w.state.last_page		}	}	// ----------------- group: g0	w.g0 = w.add("group", undefined , "")	w.g0.orientation = "row"	w.g0.alignChildren = ["fill", "top"]	// ----------------- button: cancelElement	w.cancelElement = w.g0.add("button", undefined, "Abbrechen")	w.cancelElement.onClick= function() {		this.window.close(2)	}	// ----------------- button: defaultElement	w.defaultElement = w.g0.add("button", undefined, "OK")	w.defaultElement.onClick= function() {		this.window.close(1)	}	return (w.show() == 1) ? w.state : null;				function toggle_iconbutton( btn ) {		try {			var sibs = btn.parent.children;			for ( var c = 0; c < sibs.length; c++ ) {				if ( sibs[c].type == "iconbutton" ) {					sibs[c].value = false;					btn.window.state[sibs[c].id] = false;				}			}		} catch(e) { 		}		btn.value = true;		btn.window.state[ btn.id ] = true	}}$.writeln( get_params().toSource() );